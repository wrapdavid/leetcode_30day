

/*
 *
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
/*
char *** groupAnagrams(char ** strs, int strsSize, int* returnSize, int** returnColumnSizes){
    
    
    char*** returnResult = malloc(sizeof(char**) * 3);
    returnResult[0] = malloc(sizeof(char*)* 3);
    returnResult[1] = malloc(sizeof(char*)* 2);
    returnResult[2] = malloc(sizeof(char*)* 1);
    
    returnResult[0][0] = malloc(sizeof(char) * (strlen("ate") + 1));
    strcpy(returnResult[0][0], "ate");
    returnResult[0][1] = malloc(sizeof(char) * (strlen("ate") + 1));
    strcpy(returnResult[0][1], "eat");
    returnResult[0][2] = malloc(sizeof(char) * (strlen("ate") + 1));
    strcpy(returnResult[0][2], "tea");
        
    returnResult[1][0] = malloc(sizeof(char) * (strlen("nat") + 1));
    strcpy(returnResult[1][0], "nat");
    returnResult[1][1] = malloc(sizeof(char) * (strlen("tan") + 1));
    strcpy(returnResult[1][1], "tan");
        
    returnResult[2][0] = malloc(sizeof(char) * (strlen("bat") + 1));
    strcpy(returnResult[2][0], "bat");
        
    *returnSize = 3;
 
    *returnColumnSizes = malloc(sizeof(int) * 3);
    (*returnColumnSizes)[0] = 3;
    (*returnColumnSizes)[1] = 2;
    (*returnColumnSizes)[2] = 1;
    
    
    return returnResult;
}
*/