
int extract(int *stones, int stonesSize){   
    int max = stones[0];
    for(int i = 1; i < stonesSize; i++){
        if(max < stones[i]){
            max = stones[i];
        }
    }
    for(int i = 0; i < stonesSize; i++){
        if(max == stones[i]){
            stones[i] = 0;
           break;//記得要有
        }
    }
    
    
    return max;
}

void insert(int* stones, int stonesSize, int value){
    for(int i = 0; i < stonesSize; i++){
        if(stones[i] == 0){
           stones[i] = value;
            break;//記得要有
        }
    }
}

int lastStoneWeight(int* stones, int stonesSize){
    
    while(true){
        int y = extract(stones, stonesSize);
        int x = extract(stones, stonesSize);
        
        if(x == 0){
            return y;
        }
        if(x != y){
          insert(stones,stonesSize, y - x);
        }
        for(int i = 0; i < stonesSize; i ++){
             printf("%d",stones[i]);
        }
        printf("\n");
       
   }
 
    
    
    
   return 0;
}


//方法二:用qsort做
int extract(int* stones, int stonesSize){
    int max_i = 0;
    for(int i = 0; i < stonesSize; i++){
        if(stones[max_i] < stones[i]){
            max_i = i;
            
        }
    }    
    int max = stones[max_i];
    stones[max_i] = 0;
    
    return max;
}

void insert(int* stones, int stonesSize, int value){
    for(int i = 0; i < stonesSize; i++){
        if(stones[i] ==0){
            stones[i] = value;
            break;
        }
    }
}

int cmp(const void* a, const void* b){
    return *(const int*)b - *(const int*)a;
}
int lastStoneWeight(int* stones, int stonesSize){
    
    while(true){
        if(stonesSize < 2) return stones[0];
        qsort(stones, stonesSize, sizeof(int), cmp);
        int y = stones[0];
        int x = stones[1];
        stones[0] = stones[1] = 0;
        if(x == 0){
            return y;
        }
        if(x!= y){
           stones[0] = y - x;
        }

        for(int i = 0; i < stonesSize; i++){
            printf("%d", stones[i]);
        }
        printf("  y: %d x: %d \n", y, x);

    }
    return 0; 
}